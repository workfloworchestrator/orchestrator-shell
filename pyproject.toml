[build-system]
build-backend = "flit_core.buildapi"
requires = ["flit_core >=3.2,<4"]

[project]
name = "orchestrator-shell"
dynamic = ['version', 'description']
author = "SURF"
author-email = "automation-beheer@surf.nl"
home-page = "https://github.com/workfloworchestrator/orchestrator-shell"
classifiers = [
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python",
    "Topic :: Internet",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development",
    "Topic :: Software Development",
    "Typing :: Typed",
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Telecommunications Industry",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.11",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Internet :: WWW/HTTP",
]
dependencies = [
    "cmd2",
    "orchestrator-core",
    "tabulate",
]

readme = "README.md"
requires-python = ">=3.11,<3.14"

[project.urls]
Documentation = "https://workfloworchestrator.org/orchestrator-core/"
Source = "https://github.com/workfloworchestrator/orchestrator-shell"

[project.scripts]
orchestrator-shell = "orchestrator_shell:main"

[project.optional-dependencies]
dev = [
    "mypy",
    "ruff",
    "types-tabulate",
    "bumpversion",
]

[tool.flit.module]
name = "orchestrator_shell"

[tool.black]
line-length = 120
target-version = ["py312", "py310"]
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | venv
    | src
  )/
)
'''

[tool.ruff]
lint.exclude = [
    ".git",
    ".cache",
    ".eggs",
    "__pycache__",
    "venv",
    ".venv",
    "src",
]
lint.ignore = [
    "ANN101",
    "ANN102",
    "D100",
    "D104",
    "T201",
]
line-length = 120
lint.select = [
    "ANN",
    "ARG",
    "B",
    "C",
    "D",
    "E",
    "F",
    "I",
    "N",
    "PGH",
    "PTH",
    "RET",
    "RUF",
    "S",
    "T",
    "W",
    "Q",
]
target-version = "py312"

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.per-file-ignores]
"crm/api/*" = ["B008"]
"test/*" = ["S101"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
known-first-party=["nwastdlib", "oauth2_lib"]

[tool.ruff.lint.mccabe]
# Explicitly set default to 7, so we can later lower this threshold once all 6+ issues are solved.
max-complexity = 7
